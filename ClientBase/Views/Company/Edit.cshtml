@model Company

@using (Html.BeginForm("Edit", "Company", FormMethod.Post))
{
    @Html.HiddenFor(c => c.Id)
    <div class="form-group">
        <label asp-for="IsIndividual"></label>
        <div><span asp-validation-for="IsIndividual" class="text-danger"></span></div>
        <select asp-for="IsIndividual" class="form-control">
            <option value="">Тип компании</option>
            <option value="true">Индивидуальный предприниматель</option>
            <option value="false">Юридическое лицо</option>
        </select>
    </div>
    <div class="form-group">
        <label asp-for="Name"></label>
        <div><span asp-validation-for="Name" class="text-danger"></span></div>
        <input asp-for="Name" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="TaxpayerId"></label>
        <div><span asp-validation-for="TaxpayerId" class="text-danger"></span></div>
        <input asp-for="TaxpayerId" class="form-control" placeholder="10 цифр (12 для ИП)"
               value="@if (Model.TaxpayerId != 0)
               { @Model.TaxpayerId }" />
    </div>

    <div class="form-group" id="founders">
        <label asp-for="CompanyFounders"></label>

        <input type="search" id="FounderSearch" class="form-control" placeholder="Поиск учредителя по ФИО и ИНН">
        <div id="livesearch" class="w-100 mb-2"></div>

        <ul class="list-group">
            @{ 
                Model.CompanyFounders = Model.CompanyFounders?.ToArray() ?? new CompanyFounder[0];
                for (int i = 0; i < Model.CompanyFounders.Count; i++)
                {
                   @Html.EditorFor(m => (Model.CompanyFounders as CompanyFounder[])[i]);
                }
             }
        </ul>
    </div>

    <div class="validation" asp-validation-summary="ModelOnly"></div>

    <div class="text-center">
        <input class="btn btn-primary" type="submit" value="Сохранить">
        <a asp-action="Index" class="btn btn-outline-danger">Отмена</a>
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        async function getEntities(route, object, action, errorHandler) {
            const response = await fetch(route, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                credentials: 'include',
                body: JSON.stringify(object),
            });

            if (response.ok === true) {
                const entities = await response.json();
                action(entities);
            }
            else {
                errorHandler(response.status);
            }
        }

        async function completeLivesearch(container, entities, appendFunction) {
            let search = $(this).val();

            if (search.length == 0) {
                container.empty().hide();
                return;
            }
        }

        $('form').submit(function (e) {
            e.preventDefault();
            var founders = $("a[data-founder-id]");

            $.each(founders, function (index, value) {
                let input = $("<input/>").attr("name", `CompanyFounders[${index}].FounderId`)
                        .attr("type", "hidden")
                        .val($(value)
                        .data("founder-id"));
                $(this).append(input);
            });

            console.log(founders);

            if($(this).valid())
                this.submit();
        });

        let ids = ["#TaxpayerId", "#FounderSearch", "#Name"];


        function onTypeChange() {
            var isIndividual = $(this).children("option:selected").val();

            console.log(isIndividual);

            if (isIndividual === true) {

            } else
            if (isIndividual === false) {

            }
            else {
                $.each(ids, function (index, value) {
                    $(value).parent().hide();
                });
            }
        }

        $("#IsIndividual").on("load", onTypeChange);

        $("#IsIndividual").change(onTypeChange);

        $("#FounderSearch").keyup(async function () {
            let search = $(this).val();
            let searchElem = $("#livesearch");
            searchElem.empty();

            if (search.length == 0)
                return;

            const founders = await getEntities('/Founder/Find', {
                text: search,
                except: $(".founder-item").map(function () { return parseInt($(this).attr("value")); }).get(),
                count: 5
            }, function (founders) {

                if (founders.length == 0) {
                    return;
                }

                $.each(founders, (index, value) => {
                    let link = $("<a/>").attr("href", "#")
                        .addClass("dropdown-item")
                        .data("founder-name", value.name)
                        .data("founder-id", value.id)
                        .data("founder-taxpayer-id", value.taxpayerId)
                        .text(value.name);

                    let muted = $("<small/>").addClass("text-muted ml-2")
                        .text("ИНН: " + value.taxpayerId);

                    link.append(muted);
                    searchElem.append(link);
                });
            });
        });


        $('#founders').on('click', 'a.remove-item', function (e) {
            e.preventDefault();
            $(this).parent("li").remove();
        });

        $('#livesearch').on('click', 'a', function (e) {
            e.preventDefault();
            this.remove();

            let id = $(this).data("founder-id");
            let li = $("<li/>").addClass("list-group-item d-flex justify-content-between align-items-center");
            let div = $("<div/>");
            let link = $("<a/>").attr("target", "_blank")
                .attr("href", "/Founder/Details/" + id)
                .attr("data-founder-id", id)
                .text($(this).data("founder-name"));

            let muted = $("<small/>").addClass("text-muted ml-2")
                .text("ИНН: " + $(this).data("founder-taxpayer-id"));

            let badge = $("<a/>").attr("href", "#")
                .addClass("remove-item badge badge-secondary badge-pill")
                .text("✕");
            div.append(link).append(muted);
            li.append(div).append(badge);

            let ul = $("#founders>ul.list-group")[0];

            $(ul).append(li);
        });
    </script>
}

